@page "/fetchdataOptionalNotNull"
@using RonSijm.Syringe
@inject Optional<IWeatherResolver> WeatherResolver

<h1>Weather forecast - Nullable not null</h1>

<p>This component demonstrates lazy-loading a page with a nullable dependency, where the dependency is not null.</p>

@if (WeatherResolver == null)
{
    <p>No weather service available.</p>
    return;
}

@if (_forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] _forecasts;

    protected override async Task OnInitializedAsync()
    {
        if (WeatherResolver != null)
        {
            _forecasts = await WeatherResolver.Value.GetWeather();
        }
    }
}
